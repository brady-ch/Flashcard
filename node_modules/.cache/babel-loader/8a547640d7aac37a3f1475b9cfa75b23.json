{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Flashcard\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Deck() {\n  _s();\n\n  const [deck, setDeck] = useState();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (deckId) {\n      try {\n        readDeck(deckId, abortController.signal).then(element => {\n          setDeck(element);\n        });\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\", deck);\n        } else {\n          throw error;\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"TODO View Deck\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Deck, \"tjZL7YfS2IxGTyMdUhibRu4w75s=\", false, function () {\n  return [useParams];\n});\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Flashcard/Project_Flashcards_Qualified_1/src/Layout/Deck.js"],"names":["React","useEffect","useState","useParams","Deck","deck","setDeck","deckId","abortController","AbortController","readDeck","signal","then","element","error","name","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAaJ,SAAS,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,QAAIF,MAAJ,EAAY;AACV,UAAI;AACFG,QAAAA,QAAQ,CAACH,MAAD,EAASC,eAAe,CAACG,MAAzB,CAAR,CAAyCC,IAAzC,CAA+CC,OAAD,IAAa;AACzDP,UAAAA,OAAO,CAACO,OAAD,CAAP;AACD,SAFD;AAGD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,IAAvB;AACD,SAFD,MAEO;AACL,gBAAMS,KAAN;AACD;AACF;AACF;AACF,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArBuBV,I;UAEHD,S;;;KAFGC,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Deck() {\r\n  const [deck, setDeck] = useState();\r\n  const { deckId } = useParams();\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    if (deckId) {\r\n      try {\r\n        readDeck(deckId, abortController.signal).then((element) => {\r\n          setDeck(element);\r\n        });\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"Aborted\", deck);\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return <div>TODO View Deck</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}