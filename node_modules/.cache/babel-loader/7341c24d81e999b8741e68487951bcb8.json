{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Flashcard\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateCard(props) {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const {\n    newItem,\n    isDeck\n  } = props;\n  const [formNames, setFormNames] = useState({\n    labelFirst: \"\",\n    labelSecond: \"\",\n    titleNewOrEdit: \"\",\n    titleCardOrDeck: \"\"\n  });\n  isDeck ? newItem ? setFormNames({\n    titleNewOrEdit: \"New\",\n    labelFirst: \"Name\",\n    labelSecond: \"Description\",\n    titleCardOrDeck: \"Deck\"\n  }) : setFormNames({\n    titleNewOrEdit: \"Edit\",\n    labelFirst: \"Name\",\n    labelSecond: \"Description\",\n    titleCardOrDeck: \"Deck\"\n  }) : newItem ? setFormNames({\n    titleNewOrEdit: \"New\",\n    labelFirst: \"Front\",\n    labelSecond: \"Back\",\n    titleCardOrDeck: \"Card\"\n  }) : setFormNames({\n    titleNewOrEdit: \"Edit\",\n    labelFirst: \"Front\",\n    labelSecond: \"Back\",\n    titleCardOrDeck: \"Card\"\n  });\n  console.log(formNames);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${formNames.titleNewOrEdit} ${formNames.titleCardOrDeck}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateCard, \"iw+f3pMa8bTUXzLcEzxpPrv5MdI=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCard\");","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Flashcard/Project_Flashcards_Qualified_1/src/Layout/Form.js"],"names":["React","useState","useParams","CreateCard","props","deckId","cardId","newItem","isDeck","formNames","setFormNames","labelFirst","labelSecond","titleNewOrEdit","titleCardOrDeck","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBJ,SAAS,EAApC;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBJ,KAA5B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACzCU,IAAAA,UAAU,EAAE,EAD6B;AAEzCC,IAAAA,WAAW,EAAE,EAF4B;AAGzCC,IAAAA,cAAc,EAAE,EAHyB;AAIzCC,IAAAA,eAAe,EAAE;AAJwB,GAAD,CAA1C;AAOAN,EAAAA,MAAM,GACFD,OAAO,GACLG,YAAY,CAAC;AACXG,IAAAA,cAAc,EAAE,KADL;AAEXF,IAAAA,UAAU,EAAE,MAFD;AAGXC,IAAAA,WAAW,EAAE,aAHF;AAIXE,IAAAA,eAAe,EAAE;AAJN,GAAD,CADP,GAOLJ,YAAY,CAAC;AACXG,IAAAA,cAAc,EAAE,MADL;AAEXF,IAAAA,UAAU,EAAE,MAFD;AAGXC,IAAAA,WAAW,EAAE,aAHF;AAIXE,IAAAA,eAAe,EAAE;AAJN,GAAD,CARZ,GAcFP,OAAO,GACPG,YAAY,CAAC;AACXG,IAAAA,cAAc,EAAE,KADL;AAEXF,IAAAA,UAAU,EAAE,OAFD;AAGXC,IAAAA,WAAW,EAAE,MAHF;AAIXE,IAAAA,eAAe,EAAE;AAJN,GAAD,CADL,GAOPJ,YAAY,CAAC;AACXG,IAAAA,cAAc,EAAE,MADL;AAEXF,IAAAA,UAAU,EAAE,OAFD;AAGXC,IAAAA,WAAW,EAAE,MAHF;AAIXE,IAAAA,eAAe,EAAE;AAJN,GAAD,CArBhB;AA4BAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE;AAAA,gBAAM,GAAEA,SAAS,CAACI,cAAe,IAAGJ,SAAS,CAACK,eAAgB;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAlDuBX,U;UACKD,S;;;KADLC,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nexport default function CreateCard(props) {\r\n  const { deckId, cardId } = useParams();\r\n  const { newItem, isDeck } = props;\r\n  const [formNames, setFormNames] = useState({\r\n    labelFirst: \"\",\r\n    labelSecond: \"\",\r\n    titleNewOrEdit: \"\",\r\n    titleCardOrDeck: \"\",\r\n  });\r\n\r\n  isDeck\r\n    ? newItem\r\n      ? setFormNames({\r\n          titleNewOrEdit: \"New\",\r\n          labelFirst: \"Name\",\r\n          labelSecond: \"Description\",\r\n          titleCardOrDeck: \"Deck\",\r\n        })\r\n      : setFormNames({\r\n          titleNewOrEdit: \"Edit\",\r\n          labelFirst: \"Name\",\r\n          labelSecond: \"Description\",\r\n          titleCardOrDeck: \"Deck\",\r\n        })\r\n    : newItem\r\n    ? setFormNames({\r\n        titleNewOrEdit: \"New\",\r\n        labelFirst: \"Front\",\r\n        labelSecond: \"Back\",\r\n        titleCardOrDeck: \"Card\",\r\n      })\r\n    : setFormNames({\r\n        titleNewOrEdit: \"Edit\",\r\n        labelFirst: \"Front\",\r\n        labelSecond: \"Back\",\r\n        titleCardOrDeck: \"Card\",\r\n      });\r\n\r\n  console.log(formNames);\r\n  return (\r\n    <section className=\"container\">\r\n      <h1>{`${formNames.titleNewOrEdit} ${formNames.titleCardOrDeck}`}</h1>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label for=\"first\"></label>\r\n          <textarea className=\"form-control\" id=\"first\"></textarea>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}