{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Flashcard\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ListDeckItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from \"../utils/api/index\"; // This is the component that is used by DisplayCards to list the deck items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListDeckItems(props) {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    try {\n      listDecks(abortController.signal).then(elements => setDecks(elements));\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"Aborted\", decks);\n      } else {\n        throw error;\n      }\n    }\n  }, [reRender]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: decks.map((deck, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [deck.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right\",\n              children: `${deck.cards.length} cards`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deck.id}`,\n              className: \"btn btn-secondary\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deck.id}/study`,\n              className: \"btn btn-primary mx-2\",\n              children: \"Study\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => window.confirm(\"Confirm Delete?\") ? deleteDeck(deck.id) : null,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListDeckItems, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = ListDeckItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListDeckItems\");","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Flashcard/Project_Flashcards_Qualified_1/src/Layout/ListDeckItems.js"],"names":["React","useEffect","useState","Link","deleteDeck","listDecks","ListDeckItems","props","decks","setDecks","abortController","AbortController","signal","then","elements","error","name","console","log","reRender","map","deck","index","cards","length","description","id","window","confirm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,oBAAtC,C,CACA;;;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,QAAI;AACFN,MAAAA,SAAS,CAACK,eAAe,CAACE,MAAjB,CAAT,CAAkCC,IAAlC,CAAwCC,QAAD,IAAcL,QAAQ,CAACK,QAAD,CAA7D;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,KAAvB;AACD,OAFD,MAEO;AACL,cAAMO,KAAN;AACD;AACF;AACF,GAZQ,EAYN,CAACI,QAAD,CAZM,CAAT;AAcA,sBACE;AAAA,cACGX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,0BACE;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,uBACGD,IAAI,CAACL,IADR,eAEE;AAAM,cAAA,SAAS,EAAC,aAAhB;AAAA,wBAAgC,GAAEK,IAAI,CAACE,KAAL,CAAWC,MAAO;AAApD;AAAA;AAAA;AAAA;AAAA,oBAFF,EAEsE,GAFtE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BH,IAAI,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,UAASJ,IAAI,CAACK,EAAG,EAA5B;AAA+B,cAAA,SAAS,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,IAAD;AACE,cAAA,EAAE,EAAG,UAASL,IAAI,CAACK,EAAG,QADxB;AAEE,cAAA,SAAS,EAAC,sBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAUE;AAAM,cAAA,SAAS,EAAC,aAAhB;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,gBADZ;AAEE,gBAAA,OAAO,EAAE,MACPC,MAAM,CAACC,OAAP,CAAe,iBAAf,IACIxB,UAAU,CAACiB,IAAI,CAACK,EAAN,CADd,GAEI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAkCD,KAnCA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAzDuBhB,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\r\n// This is the component that is used by DisplayCards to list the deck items\r\nexport default function ListDeckItems(props) {\r\n  const [decks, setDecks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    try {\r\n      listDecks(abortController.signal).then((elements) => setDecks(elements));\r\n    } catch (error) {\r\n      if (error.name === \"AbortError\") {\r\n        console.log(\"Aborted\", decks);\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [reRender]);\r\n\r\n  return (\r\n    <section>\r\n      {decks.map((deck, index) => {\r\n        return (\r\n          <div key={index} className=\"card my-3\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">\r\n                {deck.name}\r\n                <span className=\"float-right\">{`${deck.cards.length} cards`}</span>{\" \"}\r\n              </h5>\r\n              <p className=\"card-text\">{deck.description}</p>\r\n              <div>\r\n                <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">\r\n                  View\r\n                </Link>\r\n                <Link\r\n                  to={`/decks/${deck.id}/study`}\r\n                  className=\"btn btn-primary mx-2\"\r\n                >\r\n                  Study\r\n                </Link>\r\n                <span className=\"float-right\">\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() =>\r\n                      window.confirm(\"Confirm Delete?\")\r\n                        ? deleteDeck(deck.id)\r\n                        : null\r\n                    }\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}