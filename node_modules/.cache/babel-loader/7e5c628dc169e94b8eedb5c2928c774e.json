{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Flashcard\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\StudyDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyDeck(props) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const {\n    decks\n  } = props;\n  const [cards, setCards] = useState();\n  const [flip, setFlip] = useState(false);\n  const deck = decks.filter(el => Number(deckId) === Number(el.id))[0];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: [\" \", \"Study\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), deck.cards.map((cardEl, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            children: [\"Card \", `${index + 1} of ${deck.cards.length}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"card-text\",\n            children: cardEl.front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-secondary\",\n            onClick: () => setFlip(!flip),\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudyDeck, \"zPn0/6ALrgFGNtMmzFVW6xRjOrI=\", false, function () {\n  return [useParams];\n});\n\n_c = StudyDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyDeck\");","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Flashcard/Project_Flashcards_Qualified_1/src/Layout/StudyDeck.js"],"names":["React","useState","Link","useParams","StudyDeck","props","deckId","decks","cards","setCards","flip","setFlip","deck","filter","el","Number","id","name","map","cardEl","index","length","front"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYF,KAAlB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMW,IAAI,GAAGL,KAAK,CAACM,MAAN,CAAcC,EAAD,IAAQC,MAAM,CAACT,MAAD,CAAN,KAAmBS,MAAM,CAACD,EAAE,CAACE,EAAJ,CAA9C,EAAuD,CAAvD,CAAb;AACA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,sBAAcJ,IAAI,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA,qBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAgBGL,IAAI,CAACJ,KAAL,CAAWU,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,KAAmB;AACjC,0BACE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,WAAX;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,YAAV;AAAA,gCACS,GAAEA,KAAK,GAAG,CAAE,OAAMR,IAAI,CAACJ,KAAL,CAAWa,MAAO,EAD7C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAG,YAAA,KAAK,EAAC,WAAT;AAAA,sBAAsBF,MAAM,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,mBAAd;AAAkC,YAAA,OAAO,EAAE,MAAMX,OAAO,CAAC,CAACD,IAAF,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAuBU,KAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA,CAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAzCuBhB,S;UACHD,S;;;KADGC,S","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nexport default function StudyDeck(props) {\r\n  const { deckId } = useParams();\r\n  const { decks } = props;\r\n  const [cards, setCards] = useState();\r\n  const [flip, setFlip] = useState(false);\r\n\r\n  const deck = decks.filter((el) => Number(deckId) === Number(el.id))[0];\r\n  return (\r\n    <section className=\"container\">\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">{deck.name}</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {\" \"}\r\n            Study\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      {deck.cards.map((cardEl, index) => {\r\n        return (\r\n          <div class=\"card\" key={index}>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">\r\n                Card {`${index + 1} of ${deck.cards.length}`}\r\n              </h5>\r\n              <p class=\"card-text\">{cardEl.front}</p>\r\n              <button class=\"btn btn-secondary\" onClick={() => setFlip(!flip)}>\r\n                Flip\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}