{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Thinkful\\\\Flashcard\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\StudyDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getDecks } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyDeck(props) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const {\n    decks,\n    setDecks\n  } = props;\n  const [flip, setFlip] = useState(true);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    getDecks(setDecks);\n  }, []);\n  const deck = decks.filter(el => Number(deckId) === Number(el.id))[0];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: [\" \", \"Study\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${deck.name}: Study`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), deck.cards.length < 3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `You need at least 3 cards to study. There are ${deck.cards.length} in this deck.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary\",\n        to: `/decks/${deck.id}/cards/new`,\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : flip ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Card \", `${index + 1} of ${deck.cards.length}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: deck.cards[index].front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setFlip(!flip),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Card \", `${index + 1} of ${deck.cards.length}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: deck.cards[index].back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setFlip(!flip),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            if (index + 1 === deck.cards.length) {\n              if (window.confirm(\"Restart cards?\")) {\n                setIndex(0);\n              }\n            } else {\n              setIndex(index + 1);\n              setFlip(true);\n            }\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudyDeck, \"Hv4VKhOZcmd9TeQVjO/4NRirNYg=\", false, function () {\n  return [useParams];\n});\n\n_c = StudyDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyDeck\");","map":{"version":3,"sources":["C:/Users/brady/Thinkful/Flashcard/Project_Flashcards_Qualified_1/src/Layout/StudyDeck.js"],"names":["React","useEffect","useState","Link","useParams","getDecks","StudyDeck","props","deckId","decks","setDecks","flip","setFlip","index","setIndex","deck","filter","el","Number","id","name","cards","length","front","back","window","confirm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getDecks } from \"./utils\";\r\n\r\nexport default function StudyDeck(props) {\r\n  const { deckId } = useParams();\r\n  const { decks, setDecks } = props;\r\n  const [flip, setFlip] = useState(true);\r\n  const [index, setIndex] = useState(0);\r\n  useEffect(() => {\r\n    getDecks(setDecks);\r\n  }, []);\r\n\r\n  const deck = decks.filter((el) => Number(deckId) === Number(el.id))[0];\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">{deck.name}</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {\" \"}\r\n            Study\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h1>{`${deck.name}: Study`}</h1>\r\n      {deck.cards.length < 3 ? (\r\n        <div>\r\n          <h2>Not enough cards.</h2>\r\n          <p>{`You need at least 3 cards to study. There are ${deck.cards.length} in this deck.`}</p>\r\n          <Link className=\"btn btn-primary\" to={`/decks/${deck.id}/cards/new`}>\r\n            Add Cards\r\n          </Link>\r\n        </div>\r\n      ) : flip ? (\r\n        <div className=\"card\" key={index}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              Card {`${index + 1} of ${deck.cards.length}`}\r\n            </h5>\r\n            <p className=\"card-text\">{deck.cards[index].front}</p>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setFlip(!flip)}\r\n            >\r\n              Flip\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card\" key={index}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              Card {`${index + 1} of ${deck.cards.length}`}\r\n            </h5>\r\n            <p className=\"card-text\">{deck.cards[index].back}</p>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setFlip(!flip)}\r\n            >\r\n              Flip\r\n            </button>\r\n            <Link\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                if (index + 1 === deck.cards.length) {\r\n                  if (window.confirm(\"Restart cards?\")) {\r\n                    setIndex(0);\r\n                  }\r\n                } else {\r\n                  setIndex(index + 1);\r\n                  setFlip(true);\r\n                }\r\n              }}\r\n            >\r\n              Next\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}